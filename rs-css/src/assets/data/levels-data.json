{
  "levelsData": {
    "1": {
      "id": "1",
      "nameTask": "A",
      "task": "Select the plates",
      "layout": [
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        }
      ],
      "answer": "plate",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Selector</b></h3><h4 class=\"description-block_logo\">Select elements by their type</h4><h2 class=\"description-block_marker\">A</h2><p>Selects all elements of type <span class=\"description-block_marker\">A</span>. Type refers to the type of tag, so <span class=\"description-block_marker\">< div ></span>, <span class=\"description-block_marker\">< p ></span> and <span class=\"description-block_marker\">< ul ></span> are all different element types.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"> <span class=\"description-block_marker\">div</span>selects all <span class=\"description-block_marker\">< div ></span> elements.</p> <p><span class=\"description-block_marker\">p</span> selects all <span class=\"description-block_marker\">< p ></span> elements.</p>"
    },
    "2": {
      "id": "2",
      "nameTask": "A",
      "task": "Select the bento boxes",
      "layout": [
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        }
      ],
      "answer": "bento",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Selector</b></h3><h4 class=\"description-block_logo\">Select elements by their type</h4><h2 class=\"description-block_marker\">A</h2><p>Selects all elements of type <span class=\"description-block_marker\">A</span>. Type refers to the type of tag, so <span class=\"description-block_marker\">< div ></span>, <span class=\"description-block_marker\">< p ></span> and <span class=\"description-block_marker\">< ul ></span> are all different element types.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"> <span class=\"description-block_marker\">div</span>selects all <span class=\"description-block_marker\">< div ></span> elements.</p> <p><span class=\"description-block_marker\">p</span> selects all <span class=\"description-block_marker\">< p ></span> elements.</p>"
    },
    "3": {
      "id": "3",
      "nameTask": "#id",
      "task": "Select the fancy plate",
      "layout": [
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"fancy\"</span> /&gt;</span>",
          "attribute": {
            "id": "fancy"
          },
          "animated": true,
          "child": null
        },
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "child": null
        }
      ],
      "answer": "#fancy",
      "description": "<h3 class=\"description-block_logo-grey\"><b>ID Selector</b></h3><h4 class=\"description-block_logo\">Select elements with an ID</h4><h2 class=\"description-block_marker\">#id</h2><p>Selects the element with a specific <span class=\"description-block_marker\"> id </span>.You can also combine the ID selector with the type selector.</p><h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\"> #cool </span> selects any element with <span class=\"description-block_marker\"> id=\"cool\" </span></p><p><span class=\"description-block_marker\"> ul#long </span> selects <span class=\"description-block_marker\"> < ul id=\"long\" > </span></p>"
    },
    "4": {
      "id": "4",
      "nameTask": "A B",
      "task": "Select the apple on the plate",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
            "tag": "apple",
            "attribute": {},
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {},
          "child": null
        }
      ],
      "answer": "plate > apple",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Descendant Selector</b></h3><h4 class=\"description-block_logo\">Select an element inside another element</h4><h2 class=\"description-block_marker\">A  B</h2><p>Selects all <span class=\"description-block_marker\">B</span> inside of <span class=\"description-block_marker\">A</span>. <span class=\"description-block_marker\">B</span> is called a descendant because it is inside of another element.</p><h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">p  strong</span> selects all <span class=\"description-block_marker\">< strong ></span> elements that are inside of any <span class=\"description-block_marker\">< p ></span></p><p><span class=\"description-block_marker\"> #fancy  span </span> selects any <span class=\"description-block_marker\">< span ></span> elements that are inside of the element with <span class=\"description-block_marker\">id=\"fancy\"</span></p>"
    },
    "5": {
      "id": "5",
      "nameTask": "#id A",
      "task": "Select the pickle on the fancy plate",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"fancy\"</span>&gt;</span>",
          "tag": "plate",
          "attribute": {
            "id": "fancy"
          },
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        }
      ],
      "answer": "#fancy > pickle",
      "description": "<h4 class=\"description-block_logo\">Combine the Descendant & ID Selectors</h4><h2 class=\"description-block_marker\">#id  A</h2><p>You can combine any selector with the descendent selector.</p><h5 class=\"description-block_logo-grey\">Examples</h5><p><span class=\"description-block_marker\">#cool span </span> selects all <span class=\"description-block_marker\">< span ></span> elements that are inside of elements with <span class=\"description-block_marker\">id=\"cool\"</span></p>"
    },
    "6": {
      "id": "6",
      "nameTask": ".classname",
      "task": "Select the small apples",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {
            "className": "small"
          },
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "apple",
            "attribute": {
              "className": "small"
            },
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": null
        }
      ],
      "answer": ".small",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Class Selector</b></h3><h4 class=\"description-block_logo\">Select elements by their class</h4><h2 class=\"description-block_marker\">.classname</h2><p>The class selector selects all elements with that class attribute. Elements can only have one ID, but many classes.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p><span class=\"description-block_marker\">.neato</span> selects all elements with<span class=\"description-block_marker\">class=\"neato\"</span> elements.</p>"
    },
    "7": {
      "id": "7",
      "nameTask": "A.classname",
      "task": "Select the small oranges",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "animated": true,
            "child": null
          }
        }
      ],
      "answer": "orange.small",
      "description": "<h4 class=\"description-block_logo\">Combine the Class Selector</h4><h2 class=\"description-block_marker\">A.className</h2><p>You can combine the class selector with other selectors, like the type selector.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"> <span class=\"description-block_marker\">ul.important</span> selects all<span class=\"description-block_marker\">< ul ></span> elements that have<span class=\"description-block_marker\">class=\"important\"</span>.</p><p><span class=\"description-block_marker\">#big.wide</span> selects all elements with<span class=\"description-block_marker\">id=\"big\"</span> that also have<span class=\"description-block_marker\">class=\"wide\"</span>.</p>"
    },
    "8": {
      "id": "8",
      "nameTask": "Put your back into it!",
      "task": "Select the small oranges in the bentos",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "orange",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "apple",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "animated": true,
            "child": null
          }
        }
      ],
      "answer": "bento > orange.small",
      "description": "<h4 class=\"description-block_logo\">You can do it...</h4><h2 class=\"description-block_marker\">Put your back into it!</h2><p>Combine what you learned in the last few levels to solve this one!</p>"
    },
    "9": {
      "id": "9",
      "nameTask": "A, B",
      "task": "Select all the plates and bentos",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        }
      ],
      "answer": "bento, plate",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Comma Combinator</b></h3><h4 class=\"description-block_logo\">Combine, selectors, with... commas!</h4><h2 class=\"description-block_marker\">A, B</h2><p>Thanks to Shatner technology, this selects all <span class=\"description-block_marker\">A</span> and <span class=\"description-block_marker\">B</span> elements. You can combine any selectors this way, and you can specify more than two.</p><h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"> <span class=\"description-block_marker\">p, .fun</span> selects all <span class=\"description-block_marker\">< p ></span> elements as well as all elements with <span class=\"description-block_marker\">class=\"fun\"</span>elements.</p><p><span class=\"description-block_marker\">a, p, div</span> selects all <span class=\"description-block_marker\">< a ></span>, <span class=\"description-block_marker\">< p ></span> and <span class=\"description-block_marker\">< div ></span>elements</p>"
    },
    "10": {
      "id": "10",
      "nameTask": "*",
      "task": "Select all the things!",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
          "tag": "apple",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"fancy\"</span> /&gt;</span>",
          "tag": "plate",
          "attribute": {
            "id": "fancy"
          },
          "animated": true,
          "child": null
        }
      ],
      "answer": "*",
      "description": "<h3 class=\"description-block_logo-grey\"><b>The Universal Selector</b></h3><h4 class=\"description-block_logo\">You can select everything!</h4><h2 class=\"description-block_marker\">*</h2><p>You can select all elements with the universal selector!</p><h5 class=\"description-block_logo-grey\">Examples</h5><p><span class=\"description-block_marker\">p *</span> selects any element inside all <span class=\"description-block_marker\">< p ></span>elements.</p>"
    },
    "11": {
      "id": "11",
      "nameTask": "Unic task: Lash child",
      "task": "Unic Task:Select the last plates",
      "layout": [
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "plate",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        }
      ],
      "answer": ":last-child",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">My unic Task: Select elements by their position</h4><h2 class=\"description-block_marker\">Last Element</h2><p>Selects last elements</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">:nth-child(1)</span>selects first <span class=\"description-block_marker\">< div ></span> element.</p>"
    },
    "12": {
      "id": "12",
      "nameTask": "Unic task: select second element",
      "task": "Unic Task: Select the second bento boxes",
      "layout": [
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "child": null
        }
      ],
      "answer": ":nth-child(2)",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">My unic Task: Select elements by their position</h4><h2 class=\"description-block_marker\">Second Element</h2><p>Selects last elements</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">:nth-child(1)</span>selects first <span class=\"description-block_marker\">< div ></span> element.</p>"
    },
    "13": {
      "id": "13",
      "nameTask": "Unic task: select even element",
      "task": "Unic Task: Select the even bento boxes",
      "layout": [
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "child": null
        },
        {
          "tag": "bento",
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span> /&gt;</span>",
          "attribute": {},
          "animated": true,
          "child": null
        }
      ],
      "answer": ":nth-child(even)",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">My unic Task: Select elements by their position</h4><h2 class=\"description-block_marker\">Even Element</h2><p>Selects even elements</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">:nth-child(3n)</span> or <span class=\"description-block_marker\">:nth-child(odd)</span>selects even <span class=\"description-block_marker\">< div ></span> elements.</p>"
    },
    "14": {
      "id": "14",
      "nameTask": "Unic task: Select an empty elements",
      "task": "Unic task: Select an empty plate",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        }
      ],
      "answer": "plate:not(:has(pickle))",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">Unic task: Select an empty elements</h4><h2 class=\"description-block_marker\">Empty Elements</h2><p>The <span class=\"description-block_marker\">:not()</span> CSS pseudo-class represents elements that do not match a list of selectors. Since it prevents specific items from being selected, it is known as the negation pseudo-class.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">:not(n)</span> select elements who don't have elements <span class=\"description-block_marker\">(n)</span></p>"
    },
    "15": {
      "id": "15",
      "nameTask": "Unic task: Select not empty elements",
      "task": "Unic task: Select not empty plate",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        }
      ],
      "answer": "plate:has(pickle)",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">Unic task: Select not empty elements</h4><h2 class=\"description-block_marker\">Not Empty Elements</h2><p>The functional <span class=\"description-block_marker\">:has()</span> CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a relative selector list as an argument.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">element:has(n)</span> select elements who have elements <span class=\"description-block_marker\">(n)</span></p>"
    },
    "16": {
      "id": "16",
      "nameTask": "Unic task: Select an empty elements",
      "task": "Unic task: Select an empty plate",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">apple</span> /&gt;</span>",
            "tag": "apple",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {},
            "child": null
          }
        }
      ],
      "answer": "plate:empty",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Pseudo-class</b></h3><h4 class=\"description-block_logo\">Unic task: Select not empty elements</h4><h2 class=\"description-block_marker\">Not Empty Elements</h2><p>The <span class=\"description-block_marker\">:empty</span> represents any element that has no children. Children can be either element nodes or text (including whitespace). Comments, processing instructions, and CSS content do not affect whether an element is considered empty.</p> <h5 class=\"description-block_logo-grey\">Examples</h5><p class=\"description-block_bottom-border\"><span class=\"description-block_marker\">element:empty</span> select elements who not have elements.</p>"
    },
    "17": {
      "id": "17",
      "nameTask": "Unic task: Not on the bento",
      "task": "Unic task: Select element not on the bento",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "orange",
          "attribute": {
            "className": "small"
          },
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">orange</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
            "tag": "orange",
            "attribute": {
              "className": "small"
            },
            "child": null
          }
        }
      ],
      "answer": ":not(bento) > orange",
      "description": "<h4 class=\"description-block_logo\">You can do it...</h4><h2 class=\"description-block_marker\">Put your back into it!</h2><p>Combine what you learned in the last few levels to solve this one!</p>"
    },
    "18": {
      "id": "18",
      "nameTask": "Unic task: after bento",
      "task": "Unic task: Select all element after bento.",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "animated": true,
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "animated": true,
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "animated": true,
          "child": null
        }
      ],
      "answer": "bento ~ *",
      "description": "<h3 class=\"description-block_logo-grey\"><b>Type Combinators</b></h3><h4 class=\"description-block_logo\">Unic task: Select after element</h4><h2 class=\"description-block_marker\">After Element</h2><p>The combinators <span class=\"description-block_marker\">~</span> and <span class=\"description-block_marker\">></span> help you complete task.</p>"
    },
    "19": {
      "id": "19",
      "nameTask": "Unic task: pickle on the table",
      "task": "Select normal pickles on the table",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {},
          "animated": true,
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "animated": true,
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        }
      ],
      "answer": "pickle.small + pickle, plate + pickle",
      "description": "<h4 class=\"description-block_logo\">You can do it...</h4><h2 class=\"description-block_marker\">Put your back into it!</h2><p>Combine what you learned in the last few levels to solve this one!</p>"
    },
    "20": {
      "id": "20",
      "nameTask": "Unic task: even pickles",
      "task": "Unic task: Select even pickles.",
      "layout": [
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "animated": true,
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">bento</span>&gt;</span>",
          "tag": "bento",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "animated": true,
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">plate</span>&gt;</span>",
          "tag": "plate",
          "attribute": {},
          "child": {
            "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
            "tag": "pickle",
            "attribute": {},
            "child": null
          }
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> /&gt;</span>",
          "tag": "pickle",
          "animated": true,
          "attribute": {},
          "child": null
        },
        {
          "innerHTML": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pickle</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"small\"</span> /&gt;</span>",
          "tag": "pickle",
          "attribute": {
            "className": "small"
          },
          "child": null
        }
      ],
      "answer": "pickle:nth-child(2n), bento > pickle",
      "description": "<h4 class=\"description-block_logo\">You can do it...</h4><h2 class=\"description-block_marker\">Put your back into it!</h2><p>Combine what you learned in the last few levels to solve this one!</p>"
    }

  }
}
